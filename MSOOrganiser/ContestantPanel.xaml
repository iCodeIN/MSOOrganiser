<UserControl x:Class="MSOOrganiser.ContestantPanel"

             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:local="clr-namespace:MSOOrganiser.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="700" d:DesignWidth="1000">
    <UserControl.Resources>
        <local:ShowBlankIfZeroIntConverter x:Key="ShowBlankIfZeroIntConverter" />
        <local:ShowCurrencyConverter x:Key="ShowCurrencyConverter" />
    </UserControl.Resources>
    <StackPanel Orientation="Vertical">
        <Border BorderBrush="#ff000000" BorderThickness="1" CornerRadius="8" Margin="4" Background="AliceBlue">
            <StackPanel Orientation="Horizontal">
                <TextBlock FontWeight="Bold" FontSize="16" Margin="10,10,10,10">Competitors
                </TextBlock>
                <ComboBox x:Name="gameCombo" Width="200" Margin="0,10,0,10"
                          ItemsSource="{Binding Contestants}"
                          DisplayMemberPath="Text"
                          SelectedValuePath="Value"
                          SelectedValue="{Binding ContestantId, Mode=TwoWay}"
                          SelectionChanged="contestantCombo_Changed">
                </ComboBox>
                <Label Margin="0,10,0,0">Search for:</Label>
                <xctk:WatermarkTextBox Watermark="First Name" Margin="0,10,10,10" Text="{Binding FilterFirstName, Mode=TwoWay}" Width="100"></xctk:WatermarkTextBox>
                <xctk:WatermarkTextBox Watermark="Surname" Margin="0,10,10,10" Text="{Binding FilterLastName, Mode=TwoWay}" Width="100"></xctk:WatermarkTextBox>
                <Button Margin="0,10,10,10" Click="search_Click">Search</Button>
                <Button Margin="0,10,10,10" Click="clearSearch_Click">Clear</Button>
                <Button Margin="0,10,10,10" IsEnabled="{Binding IsNotDirty}" Click="addNew_Click">Add New</Button>
                <Button Margin="0,10,10,10" IsEnabled="{Binding IsDirty}" Click="save_Click">Save</Button>
                <Button Margin="0,10,10,10" IsEnabled="{Binding IsDirty}" Click="cancel_Click">Cancel</Button>
            </StackPanel>
        </Border>
        <TextBlock FontWeight="Bold" FontSize="16" Margin="10,10,10,10" Text="{Binding Name}"/>
        <TabControl Height="626" x:Name="TabControl">
            <TabItem Header="Personal Details">
                <StackPanel Orientation="Vertical">
                    <StackPanel Orientation="Horizontal" Margin="0,20,0,0">
                        <Label Width="100">Name:</Label>
                        <ComboBox Width="60"
                          ItemsSource="{Binding Titles}"
                          DisplayMemberPath="Text"
                          SelectedValuePath="Value"
                          SelectedValue="{Binding Title}">
                        </ComboBox>
                        <TextBox Text="{Binding FirstName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="100" MaxLength="50" x:Name="FirstName"></TextBox>
                        <TextBox Text="{Binding Initials, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="40" MaxLength="10"></TextBox>
                        <TextBox Text="{Binding LastName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="160"  MaxLength="50"></TextBox>
                        <Label>Male:</Label>
                        <CheckBox IsChecked="{Binding IsMale, Mode=TwoWay}" VerticalAlignment="Center"></CheckBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,20,0,0">
                        <Label Width="100">Nationality:</Label>
                        <ComboBox Width="160" ItemsSource="{Binding Nationalities}" DisplayMemberPath="Text"
                                  SelectedValuePath="Value" SelectedValue="{Binding Nationality, Mode=TwoWay}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,20,0,0">
                        <Label Width="100">Phone</Label>
                        <Label> (day) </Label>
                        <TextBox Text="{Binding DayPhone, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="100" MaxLength="50"></TextBox>
                        <Label> (evening) </Label>
                        <TextBox Text="{Binding EvePhone, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="100" MaxLength="50"></TextBox>
                        <Label> (fax)</Label>
                        <TextBox Text="{Binding Fax, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="100" MaxLength="50"></TextBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,20,0,0">
                        <Label Width="100">Email:</Label>
                        <TextBox Text="{Binding Email, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="200" MaxLength="50"></TextBox>
                        <Label>Exclude from promotional mail:</Label>
                        <CheckBox IsChecked="{Binding WantsNoMail, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center"></CheckBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,20,0,0">
                        <Label Width="100">Date of Birth:</Label>
                        <DatePicker Width="100" SelectedDate="{Binding DateOfBirth, Mode=TwoWay}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,20,0,0">
                        <Label Width="100">Is Concession:</Label>
                        <CheckBox IsChecked="{Binding IsConcessional, Mode=TwoWay}" VerticalAlignment="Center"></CheckBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,20,0,0">
                        <Label Width="100">Address1:</Label>
                        <TextBox Text="{Binding Address1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="200" MaxLength="50"></TextBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,0,0,0">
                        <Label Width="100">Address2:</Label>
                        <TextBox Text="{Binding Address2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="200" MaxLength="50"></TextBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,0,0,0">
                        <Label Width="100">City:</Label>
                        <TextBox Text="{Binding City, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="200" MaxLength="50"></TextBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,0,0,0">
                        <Label Width="100">County:</Label>
                        <TextBox Text="{Binding County, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="200" MaxLength="50"></TextBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,0,0,0">
                        <Label Width="100">Postcode:</Label>
                        <TextBox Text="{Binding Postcode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="100" MaxLength="50"></TextBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,0,0,0">
                        <Label Width="100">Country:</Label>
                        <TextBox Text="{Binding Country, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="100" MaxLength="50"></TextBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,20,0,0">
                        <Label Width="100">Competed in:</Label>
                        <TextBlock Text="{Binding CompetedIn}" Width="740"></TextBlock>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,20,0,0">
                        <Label Width="100">Notes:</Label>
                        <TextBox Text="{Binding Notes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="740" MinLines="3"></TextBox>
                    </StackPanel>
                </StackPanel>
            </TabItem>
            <TabItem Header="Organisations">
                <StackPanel Orientation="Vertical">
                    <StackPanel Orientation="Horizontal" Margin="0,20,0,0">
                        <Label Width="100">BCF Code:</Label>
                        <TextBox Text="{Binding BCFCode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="100" MaxLength="7"></TextBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,20,0,0">
                        <Label Width="100">FIDE Code:</Label>
                        <TextBox Text="{Binding FIDECode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="100"  MaxLength="8"></TextBox>
                    </StackPanel>
                </StackPanel>
            </TabItem>
            <TabItem Header="Events and Payments">
                <StackPanel Orientation="Vertical">
                    <StackPanel Orientation="Horizontal" Margin="0,20,0,0">
                        <Label Width="100">Olympiad:</Label>
                        <ComboBox Width="240"
                          ItemsSource="{Binding Olympiads}"
                          DisplayMemberPath="Text"
                          SelectedValuePath="Value"
                          SelectedValue="{Binding CurrentOlympiadId}"
                          SelectionChanged="olympiadCombo_Changed">
                        </ComboBox>
                        <Button Margin="50,0,0,0" Click="addEvent_Click">Add / Remove Events</Button>
                        <Button Margin="20,0,0,0" Click="addPayment_Click">Add Payment</Button>
                    </StackPanel>
                    <DataGrid Name="dataGrid" CanUserAddRows="False" CanUserResizeColumns="True" CanUserSortColumns="True"
                              AutoGenerateColumns="False" Height="360"
                            Width="980" Margin="0,20,0,0" IsReadOnly="True" ItemsSource="{Binding Events}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="EventId" Binding="{Binding EventId}" />
                            <DataGridTextColumn Header="Code" Binding="{Binding EventCode}" />
                            <DataGridTextColumn Header="EventName" Binding="{Binding EventName}" />
                            <DataGridCheckBoxColumn Header="Receipt" Binding="{Binding Receipt}" />
                            <DataGridTextColumn Header="Fee" Binding="{Binding Fee, Converter={StaticResource ShowCurrencyConverter}}" />
                            <DataGridTextColumn Header="Partner" Binding="{Binding Partner}" />
                            <DataGridTextColumn Header="Medal" Width="48" Binding="{Binding Medal}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Style.Triggers>
                                            <Trigger Property="Text" Value="Bronze">
                                                <Setter Property="Background" Value="Brown"/>
                                                <Setter Property="Foreground" Value="White"/>
                                            </Trigger>
                                            <Trigger Property="Text" Value="Silver">
                                                <Setter Property="Background" Value="Silver"/>
                                            </Trigger>
                                            <Trigger Property="Text" Value="Gold">
                                                <Setter Property="Background" Value="Gold"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="Junior Medal" Width="96" Binding="{Binding JuniorMedal}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Style.Triggers>
                                            <Trigger Property="Text" Value="Bronze">
                                                <Setter Property="Background" Value="Brown"/>
                                                <Setter Property="Foreground" Value="White"/>
                                            </Trigger>
                                            <Trigger Property="Text" Value="Silver">
                                                <Setter Property="Background" Value="Silver"/>
                                            </Trigger>
                                            <Trigger Property="Text" Value="Gold">
                                                <Setter Property="Background" Value="Gold"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="Rank" Binding="{Binding Rank, Converter={StaticResource ShowBlankIfZeroIntConverter}}" />
                            <DataGridTextColumn Header="Pentamind" Binding="{Binding Penta}" />
                            <DataGridTextColumn Header="TieBreak" Binding="{Binding TieBreak}" />
                            <DataGridCheckBoxColumn Header="Absent" Binding="{Binding Absent}" />
                            <DataGridTemplateColumn  MinWidth="100" Header="Actions">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <Button Visibility="{Binding EditFeeButtonVisibility}" Click="editFee_Click">Edit Fee</Button>
                                            <Button Visibility="{Binding ResultsButtonVisibility}" Click="event_Click">View Results</Button>
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <DataGrid Name="paymentDataGrid" CanUserAddRows="False" CanUserResizeColumns="True" CanUserSortColumns="True"
                              AutoGenerateColumns="False" 
                            Width="920" Height="100" Margin="0,20,0,0" IsReadOnly="True" ItemsSource="{Binding Payments}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="PaymentId" Binding="{Binding PaymentId}" />
                            <DataGridTextColumn Header="Amount" Binding="{Binding Amount, Converter={StaticResource ShowCurrencyConverter}}" />
                            <DataGridTextColumn Header="Method" Binding="{Binding Method}" />
                            <DataGridCheckBoxColumn Header="Banked" Binding="{Binding Banked}" />
                        </DataGrid.Columns>
                    </DataGrid>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock FontWeight="Bold" FontSize="16" Margin="10,10,10,10" Text="{Binding Totals}"/>
                        <Button Margin="4,4,4,4" Click="print_Click">Print Schedule/Results</Button>
                    </StackPanel>
                </StackPanel>
            </TabItem>
            <TabItem Header="Other">
                todo: Parking permits, Max Fee Card, Players Timetable,
                Add to Selected, Make Arbiter, Print Badge
            </TabItem>
        </TabControl>
    </StackPanel>
</UserControl>
