<UserControl x:Class="MSOOrganiser.EventPanel"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:local="clr-namespace:MSOOrganiser.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="600">
    <UserControl.Resources>
        <local:ShowBlankIfZeroIntConverter x:Key="ShowBlankIfZeroIntConverter" />
        <local:Show3DecPlacesConverter x:Key="Show3DecPlacesConverter" />
        <local:ShowCurrencyConverter x:Key="ShowCurrencyConverter" />
        <local:ShowDateOnlyConverter x:Key="ShowDateOnlyConverter" />
        <local:MedalToBackgroundColorConverter x:Key="MedalToBackgroundColorConverter" />
        <local:MedalToForegroundColorConverter x:Key="MedalToForegroundColorConverter" />
    </UserControl.Resources>
    <StackPanel Orientation="Vertical">
        <Border BorderBrush="#ff000000" BorderThickness="1" CornerRadius="8" Margin="4" Background="AliceBlue">
            <StackPanel Orientation="Horizontal">
                <TextBlock FontWeight="Bold" FontSize="16" Margin="10,10,10,10">Event
                </TextBlock>
                <ComboBox Width="300" Margin="0,10,0,10"
                          ItemsSource="{Binding Events}"
                          DisplayMemberPath="Text"
                          SelectedValuePath="Value"
                          SelectedValue="{Binding EventCode}"
                          SelectionChanged="eventCombo_Changed">
                </ComboBox>
                <ComboBox Width="300" Margin="10,10,0,10"
                          ItemsSource="{Binding Olympiads}"
                          DisplayMemberPath="Text"
                          SelectedValuePath="Id"
                          SelectedValue="{Binding CurrentOlympiadId}"
                          SelectionChanged="olympiadCombo_Changed">
                </ComboBox>
                <Button Margin="10,10,10,10" IsEnabled="{Binding IsDirty}" Click="save_Click">Save</Button>
                <Button Margin="10,10,10,10" IsEnabled="{Binding IsDirty}" Click="cancel_Click">Cancel</Button>
            </StackPanel>
        </Border>
        <TabControl Height="660">
            <TabItem Header="Details">
                <StackPanel Orientation="Vertical">
                    <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                        <Label Width="100">Entry Fee:</Label>
                        <ComboBox Width="240" Margin="0,0,0,0"
                          ItemsSource="{Binding Fees}"
                          DisplayMemberPath="Text"
                          SelectedValuePath="Value"
                          SelectedValue="{Binding EntryFee}">
                        </ComboBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                        <Label Width="100">Arbiter:</Label>
                        <TextBox Text="{Binding Arbiter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="160"></TextBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                        <Label Width="100">Location:</Label>
                        <ComboBox Width="240" Margin="0,10,0,10"
                          ItemsSource="{Binding Locations}"
                          DisplayMemberPath="Text"
                          SelectedValuePath="Value"
                          SelectedValue="{Binding Location, Mode=TwoWay}">
                        </ComboBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                        <Label Width="100">Number in Team:</Label>
                        <xctk:IntegerUpDown Value="{Binding NumberInTeam, Mode=TwoWay}" Minimum="1" Maximum="16" Width="40"></xctk:IntegerUpDown>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                        <Label Width="100">Expected number of participants:</Label>
                        <xctk:IntegerUpDown Value="{Binding ExpectedNumber, Mode=TwoWay}" Minimum="0" Maximum="150" Width="40"></xctk:IntegerUpDown>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                        <Label Width="100">Type:</Label>
                        <ComboBox x:Name="typesCombo" Width="300" Margin="0,0,0,0"
                          ItemsSource="{Binding Types}"
                          DisplayMemberPath="Text"
                          SelectedValuePath="Value"
                          SelectedValue="{Binding Type}">
                        </ComboBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                        <Label Width="160">Counts towards Pentamind:</Label>
                        <CheckBox IsChecked="{Binding Pentamind, Mode=TwoWay}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                        <Label Width="160">Included in max Fee:</Label>
                        <CheckBox IsChecked="{Binding IncludedInMaxFee, Mode=TwoWay}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                        <Label Width="100">Prize Fund:</Label>
                        <TextBox Text="{Binding PrizeFund, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ShowCurrencyConverter}}" Width="60"></TextBox>
                        <Label Width="40">1st:</Label>
                        <TextBox Text="{Binding Prize1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ShowCurrencyConverter}}" Width="60"></TextBox>
                        <Label Width="40">2nd:</Label>
                        <TextBox Text="{Binding Prize2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ShowCurrencyConverter}}" Width="60"></TextBox>
                        <Label Width="40">3rd:</Label>
                        <TextBox Text="{Binding Prize3, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ShowCurrencyConverter}}" Width="60"></TextBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                        <Label Width="160">Other prizes:</Label>
                        <TextBox Text="{Binding OtherPrizes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="240"></TextBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                        <Label Width="160">Junior Medals:</Label>
                        <CheckBox IsChecked="{Binding JuniorMedals, Mode=TwoWay}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                        <Label Width="160">Junior cash prizes:</Label>
                        <Label Width="40">1st:</Label>
                        <TextBox Text="{Binding JuniorPrize1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ShowCurrencyConverter}}" Width="60"></TextBox>
                        <Label Width="40">2nd:</Label>
                        <TextBox Text="{Binding JuniorPrize2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ShowCurrencyConverter}}" Width="60"></TextBox>
                        <Label Width="40">3rd:</Label>
                        <TextBox Text="{Binding JuniorPrize3, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ShowCurrencyConverter}}" Width="60"></TextBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                        <Label Width="160">Other junior prizes:</Label>
                        <TextBox Text="{Binding JuniorOtherPrizes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="240"></TextBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                        <Label Width="160">Notes:</Label>
                        <TextBox Text="{Binding Notes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="600"></TextBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                        <Label Width="100" VerticalAlignment="Top">Sessions:</Label>
                        <xctk:IntegerUpDown Value="{Binding NumSessions, Mode=TwoWay}" IsEnabled="False" Minimum="0" Maximum="10" Width="40" VerticalAlignment="Top"></xctk:IntegerUpDown>
                        <Button VerticalAlignment="Top" Click="addSession_Click">Add Session</Button>
                    <DataGrid Name="dataGrid2" CanUserAddRows="False" CanUserResizeColumns="True" CanUserSortColumns="True"
                              AutoGenerateColumns="False"
                            Width="420" IsReadOnly="True" ItemsSource="{Binding Sessions}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Id" Binding="{Binding Id}" />
                            <DataGridTextColumn Header="Session Code" Width="60" Binding="{Binding SessionCode}"/>
                            <DataGridTextColumn Header="Date" Binding="{Binding Date, Converter={StaticResource ShowDateOnlyConverter}}" />
                            <DataGridTextColumn Header="Start" Binding="{Binding Start}" />
                            <DataGridTextColumn Header="End" Binding="{Binding End}" />
                            <DataGridTextColumn Header="Worth" Binding="{Binding Worth}" />
                                <DataGridTemplateColumn  MinWidth="100" Header="">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Button Click="deleteSession_Click">Delete</Button>
                                            </Grid>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                    </DataGrid>
                    </StackPanel>
                </StackPanel>
            </TabItem>
            <TabItem Header="Results" IsSelected="True">
                <DockPanel>
                    <StackPanel DockPanel.Dock="Top"  Orientation="Vertical">
                        <TextBlock>You can't add competitors here. Locate the required Competitor and add to their events list.</TextBlock>
                        <StackPanel Orientation="Horizontal">
                            <Label>Winners are those with the</Label>
                            <ComboBox ItemsSource="{Binding ScoreModes}"
                          DisplayMemberPath="Text"
                          SelectedValuePath="Value"
                          SelectedValue="{Binding HighScoresAreBest}"></ComboBox>
                            <Label>scores, then the</Label>
                            <ComboBox ItemsSource="{Binding ScoreModes}"
                          DisplayMemberPath="Text"
                          SelectedValuePath="Value"
                          SelectedValue="{Binding HighTieBreaksAreBest}"></ComboBox>
                            <Label>tiebreaks</Label>
                        </StackPanel>
                    </StackPanel>
                    <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal">
                        <Button Margin="4,4,4,4" Click="checkRanks_Click">Check Ranks</Button>
                        <Button Margin="4,4,4,4" Click="calculateRanks_Click">Calculate Ranks</Button>
                        <Button Margin="4,4,4,4" Click="calculatePenta_Click">Calculate Pentamind Scores</Button>
                        <Button Margin="4,4,4,4" Click="print_Click">Print Results</Button>
                    </StackPanel>
                    <DataGrid Name="dataGrid" CanUserAddRows="False" CanUserResizeColumns="True" CanUserSortColumns="True"
                              AutoGenerateColumns="False" Margin="10,20,10,0" ItemsSource="{Binding Entrants}">
                        <DataGrid.Columns>
                            <DataGridTextColumn IsReadOnly="True" Header="EntrantId" Binding="{Binding EntrantId}" />
                            <DataGridTextColumn IsReadOnly="True" Header="ContestantId" Binding="{Binding ContestantId}" />
                            <DataGridComboBoxColumn Width="80" Header="Medal"
                                      SelectedItemBinding="{Binding Path=Medal, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      SortMemberPath="MedalSortValue">
                                <DataGridComboBoxColumn.ElementStyle>
                                    <Style TargetType="ComboBox">
                                        <Setter Property="ItemsSource" Value="{Binding Medals}" />
                                    </Style>
                                </DataGridComboBoxColumn.ElementStyle>
                                <DataGridComboBoxColumn.EditingElementStyle>
                                    <Style TargetType="ComboBox">
                                        <Setter Property="ItemsSource" Value="{Binding Medals}" />
                                    </Style>
                                </DataGridComboBoxColumn.EditingElementStyle>
                            </DataGridComboBoxColumn>
                            <DataGridComboBoxColumn Width="80" Header="Junior Medal"
                                      SelectedItemBinding="{Binding Path=JuniorMedal, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      SortMemberPath="JuniorMedalSortValue">
                                <DataGridComboBoxColumn.ElementStyle>
                                    <Style TargetType="ComboBox">
                                        <Setter Property="ItemsSource" Value="{Binding JuniorMedals}" />
                                    </Style>
                                </DataGridComboBoxColumn.ElementStyle>
                                <DataGridComboBoxColumn.EditingElementStyle>
                                    <Style TargetType="ComboBox">
                                        <Setter Property="ItemsSource" Value="{Binding JuniorMedals}" />
                                    </Style>
                                </DataGridComboBoxColumn.EditingElementStyle>
                            </DataGridComboBoxColumn>
                            <DataGridTextColumn IsReadOnly="True" Header="FirstName" Binding="{Binding FirstName}" />
                            <DataGridTextColumn IsReadOnly="True" Header="LastName" Binding="{Binding LastName}" />
                            <DataGridTextColumn IsReadOnly="True" Header="" Binding="{Binding Junior}" />
                            <DataGridTextColumn Header="Rank" Binding="{Binding Rank, Converter={StaticResource ShowBlankIfZeroIntConverter}, Mode=TwoWay}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="TextWrapping" Value="Wrap" />
                                        <Setter Property="Background" Value="#EEEEEE" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                                <DataGridTextColumn.EditingElementStyle>
                                    <Style TargetType="TextBox">
                                        <Setter Property="TextWrapping" Value="Wrap" />
                                        <Setter Property="AcceptsReturn" Value="true" />
                                        <Setter Property="Background" Value="#EEEEEE" />
                                    </Style>
                                </DataGridTextColumn.EditingElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="Score" Binding="{Binding Score, Mode=TwoWay}" />
                            <DataGridCheckBoxColumn Header="Absent" Binding="{Binding Absent, Mode=TwoWay}" />
                            <DataGridTextColumn Header="TieBreak" Binding="{Binding TieBreak, Mode=TwoWay}" />
                            <DataGridTextColumn IsReadOnly="True" Header="Pentamind" Binding="{Binding PentaScore, Converter={StaticResource Show3DecPlacesConverter}}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="TextWrapping" Value="Wrap" />
                                        <Setter Property="Background" Value="#EEEEEE" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <!-- Show this if more than 2 in team -->
                            <DataGridTextColumn Header="Team" Binding="{Binding TeamOrPair, Mode=TwoWay}"  />
                            <!-- Show this if exactly 2 in team -->
                            <DataGridComboBoxColumn Width="80" Header="Partner"
                                      SelectedItemBinding="{Binding Path=TeamOrPair, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                <DataGridComboBoxColumn.ElementStyle>
                                    <Style TargetType="ComboBox">
                                        <Setter Property="ItemsSource" Value="{Binding Partners}" />
                                    </Style>
                                </DataGridComboBoxColumn.ElementStyle>
                                <DataGridComboBoxColumn.EditingElementStyle>
                                    <Style TargetType="ComboBox">
                                        <Setter Property="ItemsSource" Value="{Binding Partners}" />
                                    </Style>
                                </DataGridComboBoxColumn.EditingElementStyle>
                            </DataGridComboBoxColumn>
                            <DataGridTextColumn IsReadOnly="True" Header="PIN" Binding="{Binding PIN}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="TextWrapping" Value="Wrap" />
                                        <Setter Property="Background" Value="#EEEEEE" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTemplateColumn  MinWidth="100" Header="View">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Click="person_Click">View Person</Button>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </DockPanel>
            </TabItem>
        </TabControl>
    </StackPanel>
</UserControl>
